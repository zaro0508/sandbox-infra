Description: Setup IAM policies, groups and accounts
AWSTemplateFormatVersion: 2010-09-09
Resources:
  # !! IMPORTANT !! - AWS API will refuse to remove users that have attached resources.
  # Therefore you must do the following before deleting them from this file:
  # 1. Detach or remove the following user resources: login profile, attached
  #    MFA device, access-keys, ssh-keys, and policies.
  # 2. Detach the user from all groups.
  CelgeneAnnotatorServiceUser:
    Type: 'AWS::IAM::User'
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
  CelgeneAnnotatorServiceUserAccessKey:
    Type: 'AWS::IAM::AccessKey'
    Properties:
      UserName: !Ref CelgeneAnnotatorServiceUser

  # for deployments from Sage-Bionetworks/PHCCollaborationPortal repo
  PhccpServiceUser:
    Type: 'AWS::IAM::User'
  PhccpServiceUserAccessKey:
    Type: 'AWS::IAM::AccessKey'
    Properties:
      UserName: !Ref PhccpServiceUser
  CodeDeployDeployerRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              AWS:
                - !GetAtt PhccpServiceUser.Arn
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeDeployFullAccess
  EksServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - eks.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
Outputs:
  CelgeneAnnotatorServiceUserArn:
    Value: !GetAtt CelgeneAnnotatorServiceUser.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CelgeneAnnotatorServiceUserArn'
  CelgeneAnnotatorServiceUserAccessKey:
    Value: !Ref CelgeneAnnotatorServiceUserAccessKey
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CelgeneAnnotatorServiceUserAccessKey'
  CelgeneAnnotatorServiceUserSecretAccessKey:
    Value: !GetAtt CelgeneAnnotatorServiceUserAccessKey.SecretAccessKey
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CelgeneAnnotatorServiceUserSecretAccessKey'
  PhccpServiceUserAccessKey:
    Value: !Ref PhccpServiceUserAccessKey
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-PhccpServiceUserAccessKey'
  PhccpServiceUserSecretAccessKey:
    Value: !GetAtt PhccpServiceUserAccessKey.SecretAccessKey
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-PhccpServiceUserSecretAccessKey'
  CodeDeployDeployerRoleArn:
    Value: !GetAtt CodeDeployDeployerRole.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CodeDeployDeployerRoleArn'
  EksServiceRoleArn:
    Description: The role that Amazon EKS will use to create AWS resources for Kubernetes clusters
    Value: !GetAtt EksServiceRole.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-EksServiceRoleArn'
